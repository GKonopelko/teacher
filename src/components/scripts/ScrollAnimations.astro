---
export interface Props {
  rootMargin?: string;
  threshold?: number;
}
---

<script is:inline>
  (function () {
    'use strict';

    function setupAutoDelays() {
      const flexRows = document.querySelectorAll('.flex-row');
      flexRows.forEach((row) => {
        const cards = row.querySelectorAll('.card[data-animate="fade-in-up"]');
        cards.forEach((card, index) => {
          card.dataset.delay = (index * 100).toString();
        });
      });
    }

    const observer = new IntersectionObserver(function (entries) {
      for (let i = 0; i < entries.length; i++) {
        const entry = entries[i];
        if (entry.isIntersecting) {
          const element = entry.target;
          const delay = element.dataset.delay || 0;

          setTimeout(function () {
            element.classList.add('visible');
            observer.unobserve(element);
          }, Number(delay));
        }
      }
    });

    document.addEventListener('DOMContentLoaded', function () {
      setupAutoDelays();

      const elements = document.querySelectorAll('[data-animate="fade-in-up"]');
      for (let i = 0; i < elements.length; i++) {
        observer.observe(elements[i]);
      }
    });
  })();
</script>
