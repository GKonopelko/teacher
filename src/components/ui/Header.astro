---
import MobileMenu from './MobileMenu.astro';
import Logo from './Logo.astro';
import DesktopNav from './DesktopNav.astro';
import BurgerButton from './BurgerButton.astro';

interface Props {
  buttonId?: string;
  menuId?: string;
}

const { buttonId = 'headerBurger', menuId = 'mobileMenu' } = Astro.props;
---

<header class="header">
  <div class="header-container">
    <div class="header-left">
      <a
        href="/"
        class="logo-home-link radius-link"
        aria-label="На главную страницу - Преподаватель финского языка Конопелько Григорий Викторович"
      >
        <Logo />
      </a>
      <DesktopNav />
    </div>

    <div class="header-right">
      <BurgerButton {buttonId} {menuId} />
    </div>
  </div>

  <MobileMenu {menuId} />
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('headerBurger') as HTMLButtonElement;
    const menu = document.getElementById('mobileMenu') as HTMLElement;

    if (!button || !menu) {
      return;
    }

    let isOpen = false;

    function toggleMenu() {
      isOpen = !isOpen;
      button.setAttribute('aria-expanded', isOpen.toString());
      button.setAttribute('aria-label', isOpen ? 'Закрыть меню' : 'Открыть меню');
      menu.setAttribute('aria-hidden', (!isOpen).toString());
      button.classList.toggle('active', isOpen);
      menu.classList.toggle('active', isOpen);

      if (isOpen) {
        document.body.classList.add('menu-open');
      } else {
        document.body.classList.remove('menu-open');
      }
    }

    function closeMenu() {
      if (isOpen) {
        isOpen = false;
        button.setAttribute('aria-expanded', 'false');
        button.setAttribute('aria-label', 'Открыть меню');
        menu.setAttribute('aria-hidden', 'true');
        button.classList.remove('active');
        menu.classList.remove('active');
        document.body.classList.remove('menu-open');
      }
    }

    button.addEventListener('click', toggleMenu);

    menu.querySelectorAll('.nav-item').forEach((link) => {
      link.addEventListener('click', closeMenu);
    });

    window.addEventListener('resize', () => {
      if (window.innerWidth > 768) closeMenu();
    });

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isOpen) closeMenu();
    });
  });
</script>

<style>
  .header {
    background: var(--background-white);
    border-bottom: 0.0625rem solid var(--border-light);
    position: sticky;
    top: 0;
    z-index: 1002;
    backdrop-filter: blur(0.625rem);
    width: 100%;
  }

  .header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    max-width: 75rem;
    margin: 0 auto;
    padding: 1rem 2rem;
    gap: 2rem;
    box-sizing: border-box; /* Важно! */
  }

  .header-left {
    display: flex;
    align-items: center;
    gap: 3rem;
    flex: 1;
    min-width: 0; /* Позволяет контенту сжиматься */
  }

  .header-right {
    display: flex;
    align-items: center;
    flex-shrink: 0; /* Запрещает сжимание */
  }

  .logo-home-link {
    text-decoration: none;
    padding: 0 1rem;
    width: 100%;
    flex-shrink: 1; /* Разрешаем сжатие */
    min-width: 0; /* Ключевое для сжатия */
  }

  /* Адаптивность */
  @media (max-width: 64rem) {
    .header-container {
      padding: 1rem;
      gap: 1.5rem;
    }
    .header-left {
      gap: 1.5rem;
    }
  }

  @media (max-width: 48rem) {
    .header-container {
      gap: 0rem;
      padding: 1rem;
    }
    .header-left {
      gap: 1rem;
    }
    .logo-home-link {
      padding: 0 0.5rem;
    }
  }

  @media (max-width: 30rem) {
    .header-container {
      padding: 0.75rem 1rem;
    }
    .header-left {
      gap: 0.5rem;
    }
  }
</style>
