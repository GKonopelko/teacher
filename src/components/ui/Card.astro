---
export interface Props {
  href?: string;
  class?: string;
  variant?: 'default' | 'feature' | 'method' | 'audience' | 'review';
}

const { href, class: className = '', variant = 'default' } = Astro.props;
---

{
  href ? (
    <a href={href} class={`card card--${variant} ${className}`}>
      <div class="card-content">
        <slot />
      </div>
    </a>
  ) : (
    <div class={`card card--${variant} ${className}`}>
      <div class="card-content">
        <slot />
      </div>
    </div>
  )
}

<style>
  .card {
    background: var(--background-white);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow);
    padding: 2rem;
    border: 1px solid var(--border-light);
    transition: var(--transition);
    display: flex;
    flex-direction: column;
    height: 100%;
    text-decoration: none;
    color: inherit;
    flex: 1 1 300px;
    max-width: 400px;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-hover);
  }

  .card-content {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  /* Варианты карточек */
  .card--feature {
    position: relative;
    overflow: hidden;
    border: 2px solid var(--border-light);
  }

  .card--feature::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, var(--background-light), transparent);
    transition: left 0.6s ease;
    z-index: 0;
  }

  .card--feature:hover::before {
    left: 100%;
  }

  .card--feature:hover {
    border-color: var(--link-color);
  }

  .card--method,
  .card--audience,
  .card--review {
    /* Базовые стили уже в .card */
  }

  /* Адаптивность */
  @media (max-width: 768px) {
    .card {
      padding: 1.5rem;
      max-width: 100%;
    }
  }

  @media (max-width: 480px) {
    .card {
      padding: 1.5rem;
    }
  }
</style>
