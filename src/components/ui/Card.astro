---
export interface Props {
  href?: string;
  class?: string;
  variant?: 'default' | 'wide' | 'accent' | 'wide-accent';
}

const { href, class: className = '', variant = 'default' } = Astro.props;
---

{
  href ? (
    <a
      href={href}
      class={`card
      ${variant.includes('wide') ? 'card-wide' : ''}
      ${variant.includes('accent') ? 'card-accent' : ''}
      ${className}`}
    >
      <div class="card-content">
        <slot />
      </div>
    </a>
  ) : (
    <div
      class={`card
      ${variant.includes('wide') ? 'card-wide' : ''}
      ${variant.includes('accent') ? 'card-accent' : ''}
      ${className}`}
    >
      <div class="card-content">
        <slot />
      </div>
    </div>
  )
}

<style>
  .card {
    background: var(--background-white);
    border: 0.0625rem solid var(--border-light);
    border-radius: var(--border-radius-lg);
    padding: 1.5rem;
    box-shadow: var(--shadow);
    transition: var(--transition);
    display: flex;
    flex-direction: column;
    height: auto;
    text-decoration: none;
    color: inherit;
    flex: 1 1 10rem;
    max-width: 25rem; /* 400px */
  }

  .card-wide {
    flex: 1 1 100%;
    max-width: 100%;
  }

  .card-accent {
    background: var(--accent-soft);
    border-color: var(--accent-light);
  }

  .card:hover {
    border-color: var(--accent-soft);
    box-shadow: 0 0.125rem 0.75rem rgba(77, 166, 255, 0.15); /* 2px 12px */
  }

  .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  @media (max-width: 48rem) {
    .card {
      padding: 1.25rem;
      max-width: 100%;
    }
  }
</style>
