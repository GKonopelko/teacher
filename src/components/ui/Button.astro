---
export interface Props {
  href?: string;
  variant?: 'primary' | 'button-link' | 'text-link' | 'nav-link';
  size?: 'small' | 'medium' | 'large';
  class?: string;
  target?: string;
  rel?: string;
  type?: 'button' | 'submit';
}

const {
  href,
  variant = 'primary',
  size = 'medium',
  class: className = '',
  target,
  rel,
  type = 'button',
} = Astro.props;

const baseClass = 'btn';
const variantClass = `btn-${variant}`;
const sizeClass = size !== 'medium' ? `btn--${size}` : '';
---

{
  href ? (
    <a
      href={href}
      class={`${baseClass} ${variantClass} ${sizeClass} ${className}`.trim()}
      target={target}
      rel={rel}
    >
      <slot />
    </a>
  ) : (
    <button class={`${baseClass} ${variantClass} ${sizeClass} ${className}`.trim()} type={type}>
      <slot />
    </button>
  )
}

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-rounded);
    font-weight: 600;
    text-decoration: none;
    transition: var(--transition);
    border: 0.125rem solid transparent;
    font-family: inherit;
    cursor: pointer;
    gap: 0.5rem;
  }

  /* PRIMARY BUTTON - Mobile First */
  .btn-primary {
    background: var(--background-white);
    color: var(--link-color);
    border-color: var(--accent-light);
    padding: 0.75rem 1rem;
    /* font-size: var(--text-sm); */
  }

  .btn-primary:hover {
    background: var(--hover-bg);
    color: var(--text-primary);
    box-shadow: var(--shadow-hover);
    border-color: var(--hover-bg);
  }

  /* BUTTON LINK - Mobile First */
  .btn-button-link {
    background: transparent;
    color: var(--link-color);
    padding: 0.75rem 1rem;
    /* font-size: var(--text-sm); */
  }

  .btn-button-link:hover {
    background: var(--hover-bg);
    color: var(--text-primary);
  }

  /* TEXT LINK - Mobile First */
  .btn-text-link {
    background: transparent;
    color: var(--link-color);
    padding: 0.25rem 0.5rem;
    margin: -0.25rem -0.5rem;
    font-weight: normal;
    font-size: inherit;
  }

  .btn-text-link:hover {
    background: var(--hover-bg);
    color: var(--text-primary);
    text-decoration: none;
  }

  /* NAV LINK - Mobile First */
  .btn-nav-link {
    background: transparent;
    color: var(--link-color);
    font-weight: 700;
    font-size: var(--text-base);
    padding: 1rem 0.35rem;
    border-radius: 2rem;
  }

  .btn-nav-link:hover {
    background: var(--hover-bg);
    color: var(--text-primary);
  }

  /* === SIZES - Mobile First === */
  .btn--small {
    padding: 0.5rem 0.875rem;
  }

  .btn--large {
    padding: 1rem 1.5rem;
    font-size: var(--text-lg);
  }

  /* === MEDIA QUERIES === */

  /* width ≥ 768px */
  @media (min-width: 48rem) {
    .btn-primary,
    .btn-button-link {
      padding: 0.875rem 1.25rem;
      font-size: var(--text-base);
    }

    .btn-nav-link {
      padding: 1.125rem 0.3rem;
      font-size: var(--text-base);
    }

    .btn--small {
      padding: 0.625rem 1rem;
      font-size: var(--text-base);
    }

    .btn--large {
      padding: 1.125rem 2rem;
      font-size: var(--text-lg);
    }
  }

  /* width ≥ 860px */
  @media (min-width: 53.75rem) {
    .btn-nav-link {
      padding: 1.25rem 0.5rem;
      font-size: 1.1rem;
    }
  }

  /* width ≥ 928px */
  @media (min-width: 58rem) {
    .btn-primary,
    .btn-button-link {
      padding: 1rem 1.5rem;
      font-size: var(--text-base);
    }

    .btn-nav-link {
      padding: 1.25rem 1rem;
      font-size: var(--text-lg);
    }
  }

  /* width ≥ 1200px */
  @media (min-width: 75rem) {
    .btn-primary,
    .btn-button-link {
      padding: 1.125rem 2rem;
      font-size: var(--text-lg);
    }
  }

  /* === STATES === */
  .btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .btn:active {
    transform: scale(0.98);
    transition: transform 0.1s ease;
  }
</style>
